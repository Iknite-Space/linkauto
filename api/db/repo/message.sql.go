// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: message.sql

package repo

import (
	"context"
)

const createUser = `-- name: CreateUser :one
INSERT INTO "user" (fname,lname,email,gender,phone,zip_code,city,street,region,role)
VALUES ($1, $2, $3,$4,$5,$6,$7,$8,$9,$10)
RETURNING email
`

type CreateUserParams struct {
	Fname   string `json:"fname"`
	Lname   string `json:"lname"`
	Email   string `json:"email"`
	Gender  string `json:"gender"`
	Phone   string `json:"phone"`
	ZipCode string `json:"zip_code"`
	City    string `json:"city"`
	Street  string `json:"street"`
	Region  string `json:"region"`
	Role    string `json:"role"`
}

func (q *Queries) CreateUser(ctx context.Context, arg CreateUserParams) (string, error) {
	row := q.db.QueryRow(ctx, createUser,
		arg.Fname,
		arg.Lname,
		arg.Email,
		arg.Gender,
		arg.Phone,
		arg.ZipCode,
		arg.City,
		arg.Street,
		arg.Region,
		arg.Role,
	)
	var email string
	err := row.Scan(&email)
	return email, err
}
